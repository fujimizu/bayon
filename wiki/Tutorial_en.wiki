_Tutorial for bayon in English_

*Now under construction ...*

<wiki:toc />

= Introduction =

Bayon is a simple and fast [http://en.wikipedia.org/wiki/Cluster_analysis clustering] tool for large-scale data. If you want to survey large-scale data, bayon is useful to divide the data into some groups and overlook it.

Bayon supports two hard-clustering methods, repeated bisection clustering and [http://en.wikipedia.org/wiki/K-means_clustering K-means clustering]. In the outputs of these methods, each input document is assigned to only one cluster. But you can get the similar clusters for each input document by using *--classifier* option.

= News =

 * 2009/07/17: 0.0.6 Released

= Download =

Please download [http://code.google.com/p/bayon/downloads/list the latest version].

= Installation =

Dowload the latest source package, type the followings.

I recommend that you pre-install [http://code.google.com/p/google-sparsehash/ google-sparsehash] to run bayon faster.

{{{
% tar xvzf bayon-*.tar.gz
% cd bayon-*
% ./configure
% make
% make check
% sudo make install
}}}

= Usage =

== Partition input data into some clusters ==

When you want to do clustering the input data, perform the command-line tool with the following options. The output of clustering will be printed to stdout.

The documents in each cluster are arranged in descending order of the similarity values which is the cosine similarity between the documents vector and the cluster centroid vector. with *-p, --point* option the similarity values are printed in the result of clustering, by default not printed. 

{{{
% bayon -n num [options] file
% bayon -l limit [options] file
   -n, --number=num      number of clusters
   -l, --limit=lim       limit value of cluster bisection
   -p, --point           output similarity point
   -c, --clvector=file   save vectors of cluster centroids
   --clvector-size=num   max size of output vectors of
                         cluster centroids (default: 50)
   --method=method       clustering method(rb, kmeans), default:rb
   --seed=seed           set seed for random number generator
}}}

=== Specify the number of output clusters  ===

To specify the number of output clusters, perform clustering with *-n, --number* option.

{{{
(Partition input data into one hundred clusters)
% bayon -n 100 input.tsv > output.tsv

(Partition input data into one hundred clusters with similarity values)
% bayon -n 100 -p input.tsv > output.tsv
}}}

=== Specify the limit value of cluster partitions ===

When it is difficult to specify the number of output clusters, perform clustering with *-l, --limit* option which specifies the limit value of cluster partition. You had better set the limit value to 1.0-2.0 for gettting the appropriate results of clustering.

{{{
(set the limit value of cluster partition to 1.0)
% bayon -l 1.0 input.tsv > output.tsv
}}}

=== Save the vectors of cluster centroids into a file === 

To save the vectors of cluster centroids, perform clustering with *-c, --clvector* option. The vectors will be saved into the specified file in text format.

Using *--clvector-size* option, you can specify the max number of the pairs of keys and points in centroid vectors. By default fifty pairs are saved.

{{{
(save the vectors of cluster centroids into 'centroid.tsv')
% bayon -n 100 -c centroid.tsv input.tsv > output.tsv

(max number of the pairs of each vector is 20)
% bayon -n 100 -c centroid.tsv --clvector-size 20 input.tsv > output.tsv
}}}

If you want to get the similar clusters for each input document by using *-C, --classify* option, you need to save the vectors of cluster centroids.

=== Change the clutering methods ===

By default bayon uses 'Repeated Bisection Clustering' method. If you want to use 'K-means Clustering' method, perform clustering with *--method* option.

{{{
(Partition input data into a hundred clusters using K-means clustering method)
% bayon -n 100 --method kmeans input.tsv > output.tsv
}}}

Repeated bisection clustering is faster and more accurate than K-means clustering, so you had better use Repeated Bisection clustering.

=== Change the seed value for random number generator ===

Bayon selects documents randomly while clustering, so you can get the different results of clustering by specifying the seed value of random number generator. By default you get the same results of clustering everytime because the seed value is fixed.

{{{
(set seed value to 123456)
% bayon -n 100 --seed 123456 input.tsv > output.tsv
}}}

== Specify the similar clusters for each input document ==

=== Specify options for inverted index ===

== Common options ==

The following options can be used when you do clustering and specify the similar clusters for each input document.

{{{
   --idf                 apply idf to input vectors
   -h, --help            show help message
   -v, --version         show the version and exit
}}}

See next section for details about *--idf* option.

= Format of input data =

== List of input documents ==

The file of the list of input documents needs to be in a tab-separated text format as bellow. Each line must contain the information of only one document, the identifier of the document followed by the pairs of the keys and the values of document features. Blank lines must not be inserted. 

{{{
document_id1 \t key1-1 \t value1-1 \t key1-2 \t value1-2 \t ...\n
document_id2 \t key2-1 \t value2-1 \t key2-2 \t value2-2 \t ...\n
...
}}}

 * _document_id_: This is the identifier of a document, and must be the unique string which doesn't contains tab characters. 
 * _key_: This is the key of the feature of a document, and must be the string which doesn't contains tab characters.
 * _value_: This is the key of the feature of a document, and must be real number. 

=== idf option ===

== List of the vectors of cluster centroids ==

== Examples of input data ==

= Format of output data =

== List of clusters ==

== List of clusters with similarity values ==

== Examples of output data ==